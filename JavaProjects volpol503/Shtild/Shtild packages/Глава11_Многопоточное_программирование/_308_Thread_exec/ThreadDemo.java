package Глава11_Многопоточное_программирование._308_Thread_exec;

import com.sun.xml.internal.bind.v2.model.runtime.RuntimeNonElement;

public class ThreadDemo {

}


/*

==========================================================================|
|  getName      | Получает имя потока исполнения                          |
|---------------|---------------------------------------------------------|
|  getPriority  | Получает приоритет потока исполнения                    |
|---------------|---------------------------------------------------------|
|  isAlive      | Определяет, выполняется ли поток                        |
|---------------|---------------------------------------------------------|
|  join         | Ожидает завершения потока исполнения                    |
|---------------|---------------------------------------------------------|
|  run          | Задает точку входа в поток исполнения                   |
|---------------|---------------------------------------------------------|
|  sleep        | Приостанавливает выполнение потока на заданное время    |
|---------------|---------------------------------------------------------|
|  run          | Запускает поток, вызвая его метод run()                 |
==========================================================================|

 */



class CurrentThreadDemo implements Runnable {
    Thread t = Thread.currentThread();
    public static void main(String[] args) {
        Thread t = Thread.currentThread();
        System.out.println(t);
        System.out.println("Текущий поток исполнения" + t);
        //изменить имя потока исполнения
        t.setName("MyThread");
        System.out.println("После изменения потока" + t);
        try {
            for (int n = 5; n > 0; n--) {
                System.out.println(n);
                Thread.sleep(1200);
            }
        }catch (InterruptedException e){
            System.out.println("Главный поток исполнения прерван");
        }
    }

    @Override
    public void run() {

    }
}

